/**
 * Definition for a binary tree node.
 * struct TreeNode *root {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void levelorder(TreeNode *root,int level,TreeNode* parent,map<int,pair<int,TreeNode*> >&checkdetails)
    {
        if(!root) return;
        
        checkdetails.insert({root->val,{level,parent}});
        
        levelorder(root->left,level+1,root,checkdetails);
        levelorder(root->right,level+1,root,checkdetails);
    }
public:
    bool isCousins(TreeNode* root, int x, int y) {
        
        int level=0;
        TreeNode* parent=NULL;
        map<int,pair<int,TreeNode*> >checkdetails;
        
        levelorder(root,level,parent,checkdetails);
        
        if(checkdetails.count(x) && checkdetails.count(y))
        {
            if((checkdetails[x].first == checkdetails[y].first) && (checkdetails[x].second != checkdetails[y].second))
            {
                return true;
            }
        }
        return false;
    }
};
